% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tax_oa_pq.R
\name{tax_oa_pq}
\alias{tax_oa_pq}
\title{Get scientific works about taxa present in a phyloseq object}
\usage{
tax_oa_pq(
  physeq,
  taxonomic_rank = "currentCanonicalSimple",
  count_only = FALSE,
  return_raw_oa = FALSE,
  add_to_phyloseq = FALSE,
  type_works = c("article", "review", "book-chapter", "book", "letter"),
  verbose = TRUE,
  ...
)
}
\arguments{
\item{physeq}{A phyloseq object}

\item{taxonomic_rank}{(Character, default "currentCanonicalSimple")
The column(s) present in the @tax_table slot of the phyloseq object. Can
be a vector of two columns (e.g. c("Genus", "Species")).}

\item{count_only}{(Logical, default FALSE) If
TRUE, only the number of works on a given taxa is return, leading to a
faster call to openalexR::oa_fetch(). Note that if count_only is set to FALSE
all works (including e.g. preprint and dataset) are count, leading to
higher number of works than if list_doi is set to TRUE.}

\item{return_raw_oa}{(Logical, default FALSE) If TRUE, return the raw list of
publications from Open Alex for each taxa as a list of data.frame. Can be
useful to filter works for example by topic or by number of citations (see
section examples).}

\item{add_to_phyloseq}{If TRUE, return a new phyloseq
object with new columns in the tax_table slot.}

\item{type_works}{(A list of type to select) See Open Alex [documentation](https://docs.openalex.org/api-entities/works/work-object#type).
Only used if count_only is set to FALSE Default is c("article", "review",
 "book-chapter", "book", "letter").}

\item{verbose}{(logical, default TRUE) If TRUE, prompt some messages.}

\item{...}{Other params to passed on [openalexR::oa_fetch()]}
}
\value{
Either a tibble (if add_to_phyloseq = FALSE) or a new phyloseq
 object, if add_to_phyloseq = TRUE, with 1 (`n_doi`) or 4 (`n_doi`,
 `list_doi`, `n_citation` and `list_keywords`
 if `count_only` is FALSE) new column(s) in the tax_table.
}
\description{
A wrapper of [openalexR::oa_fetch()] function to get the number of
  scientific works (and a list of doi if list_doi is set to TRUE) for each
  taxa of a phyloseq object
}
\details{
This function is mainly a wrapper of the work of others.
  Please cite `openalexR` package.
}
\examples{
data_fungi_mini_cleanNames <- gna_verifier_pq(data_fungi_mini,
  add_to_phyloseq = TRUE
)
data_fungi_mini_cleanNames <- tax_oa_pq(data_fungi_mini_cleanNames,
  add_to_phyloseq = TRUE
)
ggplot(
  subset_taxa(data_fungi_mini_cleanNames, !is.na(n_doi))@tax_table,
  aes(
    x = log10(as.numeric(n_doi)),
    y = forcats::fct_reorder(currentCanonicalSimple, as.numeric(n_doi))
  )
) +
  geom_point(aes(col = Order)) +
  xlab("Number of Scientific Papers (log10 scale)")

tax_oa_pq(data_fungi_mini_cleanNames, type_works = "dataset")


list_pub_raw <- tax_oa_pq(data_fungi_mini_cleanNames,
  return_raw_oa = TRUE
)

list_pub_Health_science <- lapply(list_pub_raw, function(xx) {
  if (length(xx) == 0) {
    return(NULL)
  } else {
    filter(xx, map_lgl(topics, function(tibble_item) {
      if (is.null(tibble_item) || nrow(tibble_item) == 0) {
        return(FALSE)
      } else {
        any(grepl("Health science",
          tibble_item$display_name[tibble_item$type == "domain"],
          ignore.case = TRUE
        ))
      }
    }))
  }
})


list_pub_Ecology <- lapply(list_pub_raw, function(xx) {
  if (length(xx) == 0) {
    return(NULL)
  } else {
    filter(xx, map_lgl(topics, function(tibble_item) {
      if (is.null(tibble_item) || nrow(tibble_item) == 0) {
        return(FALSE)
      } else {
        any(grepl("Ecology",
          tibble_item$display_name[tibble_item$type == "subfield"],
          ignore.case = TRUE
        ))
      }
    }))
  }
})

list_pub_at_least_ten_citations <-
  lapply(list_pub_raw, function(xx) {
    if (length(xx) == 0) {
      return(NULL)
    } else {
      filter(xx, cited_by_count > 10)
    }
  })
}
\author{
Adrien Taudi√®re
}
